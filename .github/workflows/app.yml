name: Build Go

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18.1

    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: go build -v ./...

    - name: Run go vet
      run: go vet ./...

    - name: Install golint
      run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

    - name: Run golint
      run: golangci-lint run ./...

    - name: Run tests
      run: go test -race -vet=off ./...

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Notify failure
      if: ${{ needs.build.result == 'failure' }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ${{ github.actor }} created commit:
          Commit message: ${{ github.event.commits[0].message }}
          Build: FAIL
          Repository: ${{ github.repository }}
          ${{ format('Author: {0}', github.actor) }}
          ${{ format('Branch: {0}', needs.build-and-push.outputs.branch) }}
          See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}

      - name: Notify success
        if: ${{ needs.build.result == 'success' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            Build: SUCCESS
            Repository: ${{ github.repository }}
            ${{ format('Author: {0}', github.actor) }}
            ${{ format('Branch: {0}', needs.build-and-push.outputs.branch) }}
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}